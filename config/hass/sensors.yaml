################################
## Moon
- platform: moon

################################
## Date and time
- platform: time_date
  display_options:
    - 'date_time'

################################
## Uptime
- platform: uptime
  unit_of_measurement: days

################################
## Weather
- platform: meteo_france
  postal_code: '06810'
  monitored_conditions:
    - temperature
    - weather
    - wind_speed
    - freeze_chance
    - rain_chance
    - snow_chance
    - thunder_chance

################################
## Plex server
- platform: plex
  host: !secret plex_host
  port: !secret plex_port
  name: Plex

################################
## Plantes

- platform: mqtt
  state_topic: "house/miflora/sensor_miflora1"
  name: "Pied d'éléphant"
  unit_of_measurement: '%'
  value_template: "{{ value_json.moisture }}"
  json_attributes:
    - temperature
    - moisture
    - light
    - fertility
    - battery

- platform: mqtt
  state_topic: "house/miflora/sensor_miflora2"
  name: "Non définie"
  unit_of_measurement: '%'
  value_template: "{{ value_json.humidity }}"
  json_attributes:
    - temperature
    - moisture
    - light
    - fertility
    - battery

################################
## Thermomètres

- platform: mqtt
  state_topic: "house/xiaomith/sensor_sdb"
  name: "Salle de bain"
  unit_of_measurement: '°C'
  value_template: "{{ value_json.temperature }}"
  json_attributes:
    - temperature
    - humidity
    - battery

################################
## Vigilance Météo

- platform: template
  sensors:
    alerte_crue:
      friendly_name: "Crue"
      value_template: "{{ states('sensor.weather_alert_crue') }}"
    alerte_vigilance:
      friendly_name: "Vigilance"
      value_template: "{{ states('sensor.weather_alert_vigilance') }}"
    alerte_risques:
      friendly_name: "Risques"
      value_template: "{{ states('sensor.weather_alert_risques') }}"

################################
## Calendriers

- platform: template
  sensors:
    calendar_next_text:
      friendly_name: 'Prochain événement'
      value_template: '{{ states.calendar.home_assistant.attributes.message }}'
    calendar_next_time:
      friendly_name: 'à'
      value_template: "{{ as_timestamp(states.calendar.home_assistant.attributes.start_time) | timestamp_custom('%HH%M') }}"

################################
## RFLINK
- platform: rflink
  automatic_add: True

################################
## HP GEN8 SERVERS

- platform: hp_ilo
  host: !secret hp_ilo_gen8_1
  username: !secret hp_ilo_gen8_username
  password: !secret hp_ilo_gen8_password
  monitored_variables:
    # - name: Gen81 Uptime
    #   sensor_type: server_power_on_time
    - name: Gen81 Fanspeed
      sensor_type: server_health
      unit_of_measurement: '%'
      value_template: '{{ ilo_data.fans["Fan 1"].speed[0] }}'
    - name: Gen81 Temperature
      sensor_type: server_health
      unit_of_measurement: '°C'
      value_template: '{{ ilo_data.temperature["01-Inlet Ambient"].currentreading[0] }}'
    - name: Gen81 Status
      sensor_type: server_health
      value_template: >-
        {% if (ilo_data.health_at_a_glance["bios_hardware"].status == 'OK') and
              (ilo_data.health_at_a_glance["fans"].status == 'OK') and
              (ilo_data.health_at_a_glance["temperature"].status == 'OK') and
              (ilo_data.health_at_a_glance["power_supplies"].status == 'OK') and
              (ilo_data.health_at_a_glance["processor"].status == 'OK') and
              (ilo_data.health_at_a_glance["memory"].status == 'OK') and
              (ilo_data.health_at_a_glance["network"].status == 'OK') and
              (ilo_data.health_at_a_glance["storage"].status == 'OK') 
        %}
          OK
        {% else %}
          KO
        {% endif %}
- platform: hp_ilo
  host: !secret hp_ilo_gen8_2
  username: !secret hp_ilo_gen8_username
  password: !secret hp_ilo_gen8_password
  monitored_variables:
    # - name: Gen82 Uptime
    #   sensor_type: server_power_on_time
    - name: Gen82 Fanspeed
      sensor_type: server_health
      unit_of_measurement: '%'
      value_template: '{{ ilo_data.fans["Fan 1"].speed[0] }}'
    - name: Gen82 Temperature
      sensor_type: server_health
      unit_of_measurement: '°C'
      value_template: '{{ ilo_data.temperature["01-Inlet Ambient"].currentreading[0] }}'
    - name: Gen82 Status
      sensor_type: server_health
      value_template: >-
        {% if (ilo_data.health_at_a_glance["bios_hardware"].status == 'OK') and
              (ilo_data.health_at_a_glance["fans"].status == 'OK') and
              (ilo_data.health_at_a_glance["temperature"].status == 'OK') and
              (ilo_data.health_at_a_glance["power_supplies"].status == 'OK') and
              (ilo_data.health_at_a_glance["processor"].status == 'OK') and
              (ilo_data.health_at_a_glance["memory"].status == 'OK') and
              (ilo_data.health_at_a_glance["network"].status == 'OK') and
              (ilo_data.health_at_a_glance["storage"].status == 'OK') 
        %}
          OK
        {% else %}
          KO
        {% endif %}
